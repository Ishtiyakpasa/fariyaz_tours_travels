// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model admin{
  id        Int     @id @default(autoincrement())
  email     String   @unique
  password  String
}

model user{
  id        Int     @id @default(autoincrement())
  fname     String   
  lname     String    
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
  status    Int @default(1)
  // bookings  bookings[]
}

model bookings{
   id              Int     @id @default(autoincrement())
  //  bookingid       Int
   customer_name   String
   email           String
   adult_count     Int
   child_count     Int
   contact         String
   total_price     Float
   state           String
   city            String
  //  user_id         Int      
   package_id      Int
   passport_upload String ?
   adhar_upload    String ?
  //  user            user? @relation(fields: [user_id], references: [id])
   packages         packages? @relation(fields: [package_id], references: [id])
}

model packages{
  id             Int     @id @default(autoincrement())
  name           String  @unique
  description    String
  days           Int
  departure_city String
  thumbnail      String?
  gallary_image  Json?
  departure_date DateTime?
  arrival_date   DateTime?
  adult_price    Float @default(0.00)
  child_price    Float @default(0.00)
  hotel_distence Int
  meal           String
  baggage        String
  createdAt      DateTime @default(now())
  updatedAt      DateTime? @updatedAt
  deletedAt      DateTime? 
  status         Int @default(1)
  hotel          String
  bookings       bookings[]
  package_category String
}

model contact_us{
  id        Int      @id @default(autoincrement())
  name      String
  email     String  @unique
  message   String
  city      String
  createdAt DateTime @default(now())
}
